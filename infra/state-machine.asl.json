{
  "Comment": "Video processing workflow triggered by S3 object via EventBridge.",
  "StartAt": "ValidateInput",
  "States": {
    "ValidateInput": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT:function:ValidateInput",
      "Next": "SubmitMediaConvert",
      "Retry": [
        {
          "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException", "Lambda.SdkClientException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "NotifyError"
        }
      ]
    },
    "SubmitMediaConvert": {
      "Type": "Task",
      "Resource": "arn:aws:states:::mediaconvert:createJob",
      "Parameters": {
        "Role": "arn:aws:iam::ACCOUNT:role/MediaConvertRole",
        "Settings": {
          "Inputs": [
            {
              "FileInput.$": "$.detail.object.key"
            }
          ]
        }
      },
      "ResultPath": "$.Job",
      "Next": "WaitForJob",
      "Retry": [
        {
          "ErrorEquals": ["MediaConvert.ServiceException", "States.TaskFailed"],
          "IntervalSeconds": 10,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "NotifyError"
        }
      ]
    },
    "WaitForJob": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "CheckJob"
    },
    "CheckJob": {
      "Type": "Task",
      "Resource": "arn:aws:states:::mediaconvert:getJob",
      "Parameters": {
        "Id.$": "$.Job.Job.Id"
      },
      "ResultPath": "$.Job",
      "Next": "JobFinished?",
      "Retry": [
        {
          "ErrorEquals": ["MediaConvert.ServiceException", "States.TaskFailed"],
          "IntervalSeconds": 10,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "NotifyError"
        }
      ]
    },
    "JobFinished?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Job.Job.Status",
          "StringEquals": "COMPLETE",
          "Next": "UpdateStatus"
        },
        {
          "Variable": "$.Job.Job.Status",
          "StringEquals": "ERROR",
          "Next": "NotifyError"
        }
      ],
      "Default": "WaitForJob"
    },
    "UpdateStatus": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "VideoJobs",
        "Key": {
          "jobId": {
            "S.$": "$.Job.Job.Id"
          }
        },
        "UpdateExpression": "SET #s = :s",
        "ExpressionAttributeNames": {
          "#s": "status"
        },
        "ExpressionAttributeValues": {
          ":s": {
            "S": "COMPLETED"
          }
        }
      },
      "End": true,
      "Retry": [
        {
          "ErrorEquals": [
            "DynamoDB.AmazonDynamoDBException",
            "DynamoDB.ProvisionedThroughputExceededException",
            "DynamoDB.ResourceNotFoundException",
            "States.TaskFailed"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "NotifyError"
        }
      ]
    },
    "NotifyError": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:REGION:ACCOUNT:VideoProcessingErrors",
        "Message.$": "States.JsonToString($.error)"
      },
      "Next": "SendToDLQ",
      "Retry": [
        {
          "ErrorEquals": ["SNS.InternalError", "States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ]
    },
    "SendToDLQ": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "QueueUrl": "https://sqs.REGION.amazonaws.com/ACCOUNT/video-processing-dlq",
        "MessageBody.$": "States.JsonToString($)"
      },
      "End": true
    }
  }
}
